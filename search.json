[{"title":"静","path":"/2025/09/24/静/","content":"不知自何时起，周遭的空气仿佛变得稀薄而滚烫，一种无声的浮躁，如弥散的烟尘，悄然弥漫于你我周遭的空气。我亲爱的朋友，请你告诉我，这弥散于我们生命中的尘埃，这让我们与沉静的自我渐行渐远的迷雾，究竟从何而来？ 是我们行囊中那份沉甸甸的清单吗？学业的绩点、竞赛的奖杯、科研的署名、学生工作的履历、保研的阶梯、奖学金的数字、实习经历的光环……它们如同路途上的石子，起初是前行路上的垫脚石，后来反而却成了压垮步履的重负。是向那个名为“人工智能”的便捷神使，献上了太多的虔诚吗？以至于我们遗忘了，独自在知识的旷野中摸索的勇气。是源于网络世界的那一场场短暂的烟火吗？那些抽象的段子与迷因，如流星划过，却留下一阵捧腹的空洞；我们每日上线”收取“游戏里的“菜”，在数据的增减中，收获着虚拟的慰藉。 当然你可能会说，当自己已经忙碌和困倦了一整天的时候，偶尔刷刷视频、看看消息、玩玩游戏、闲聊一下，已经是很快捷的令人愉悦的放松方式，况且现在的社会内卷这么严重。 人们对这些能快速带来满足感的事情的追求，我并不感到鄙夷或者说诸如此类，每个人去做什么样的事情，怎么去思考，都有自己选择的理由，都有对方渴望的一些价值和意义，或许也或多或少地受到了来自时间和空间（无论是过去经历还是环境和氛围）的影响，这无可指摘。但当这些东西以较坏的方式影响到了我们的身心，阻碍了我们对生活的探索和追求的时候，我们就应该思考，如何以正确地方式面对和处理这些东西，面对许许多多的压力，面对看不清的未来的路，以及充满焦虑和内卷的社会。 我们似乎总是在走社会认同的最显而易见能“成功”的路，在这条路上不断地向前，即使有时知道很难，明白或许就是零和博弈，也难以放下。我们似乎总是被一双无形的大手控制着，想逃开又依依不舍地觉得可能还有机会，在焦虑之中不断地前进着。 或许我们应该真正多花点时间去探索自己想要去做的，不断地探索、发现和尝试，遇到东西之后沉下心来学习，去追问去发自内心地认同那些知识而不是浅尝辄止，不是那种装作完全理解其实只是熟悉并记住了，也不要总是想着依赖各种东西走捷径。 或许我们也应该静下来，多花一点时间冥想，去和自己单独相处，去好好作息，什么都不做单纯地吃个饭，静下来走走路，去好好生活，也许这样，等我们的内心更宁静和坚定，目标更清晰和明确之后，我们就不会再被那些世俗重重束缚住，能够坦然处之，能真正去享受生活热爱生活。"},{"title":"笔记（分类占位）","path":"/2025/02/26/课业-笔记-分类占位/","content":"此文章用于在分类页中创建「课业 &#x2F; 笔记」分类结构的占位。","categories":["课业","笔记"]},{"title":"作业（分类占位）","path":"/2025/02/26/课业-作业-分类占位/","content":"此文章用于在分类页中创建「课业 &#x2F; 笔记」分类结构的占位。","categories":["课业","作业"]},{"title":"教育","path":"/2025/02/26/教育/","content":"在现代教育体制中，弥漫着一种近乎窒息氛围。这是一种师生共同编织的“形式主义、教条主义”氛围——沉溺于知识表象和已有框架氛围、对“天赋”之偶像化崇拜氛围。在这一环境中，教育的核心已悄然滑向了机械化的知识转述和存储——对知识表面的执着复述。将逐步被计算机所替代执行的任务却反客为主，成为学习者们主要的学习内容，简直是在侮辱作为人应有的独特性。既定的教育模式仍然凝固于数十年前的状态，与真正意义上的思维优化训练与直觉锻炼相去甚远。创造性、理性被排斥于边缘，那些最接近智慧之本质的观念和应有的思维锤炼，却因其表面上的“非实用性”而遭受冷遇。试想，若将法国哲学高考中那些具有辩证性质与思想深度的难题交予我们的中学生，他们会如何作答？这一从教育者口中流露出的略带轻蔑性的质疑，使我再一次意识到原来我们的教育悲剧已经成为了如此闭环。在陈旧的教条和规范下，教育者们往往为了完成教学任务和应对考纲的要求，回避对知识本质的探讨，唯恐拖慢教学进度。如此，教育停留在知识的表面，走了一条看似是捷径、实则最曲折的道路。学生们没有得到正确的引导，缺乏真正的思维训练和直觉培养，反而被层层抽象的知识所困扰，被功利化的目标所驱使。他们被告知，这种模式是合理的、是公平的，他们就应该在此之上不断尝试不断努力。但是，即使万分努力，他们也难以解决考试问题，更无法真正找到自我学习的方向与方法。大部分学生们半清醒半绝望，开始将这一切归为自身智力的因素，他们于是觉得自己终于醒悟，揭露了“真相”，成功地批判了旧观念的“鸡汤”，形成“一个人努力学习而成绩一般，那便最该鄙视；倘若成绩不错，那倒正常，位列次席；万一这人成绩不错时还能坚持天天打游戏，那就更要奉为至高无上的大神了“的令人窒息氛围，鄙视那些仍在挣扎的同伴，以此来获得一种虚假的优越感。教育者们也渐渐认定，自己的学生们掌握不了难的知识，理解不了本质的东西。学生们也逐步认为教育的实际就应该是这样，于是，一旦面对难题或本质性问题，便选择沉默；当听到“不考”时，便哗然一片，轻松应付。学生们越是逃避漫长而曲折的自我思考，急匆匆地追寻考试成绩和盲目学习新知识，没有自我反思和他人指引，真正的思维能力就越得不到培养，离真正地解决考试难题和自我学习问题的能力也就越远，他们的功利目标就会随之愈强烈，越难以有耐心有毅力去琢磨那些深刻的问题，更有甚者以“智商”作为标尺，相互鄙夷，教育者也越不愿意提出具有创造性的问题，如此死循环下去……其中不知有多少人失却了学习的乐趣，不仅无法窥见学习之内在价值，甚至衍生出对知识的深深厌倦。般惨状，得让多少哲学家书尽哲学沉思来为之心寒，多少教育者们苦思冥想为之叹惋。教育者们本应该引领学生从创造者与发明者的视角，一步步提现实生活中会出现的问题，并引导学生们自己去产生直观，去自己创造概念设计问题。引导学生在直观的基础上推导出严格化的论述，在所创造出的结论中不断进行优化与分析，最终形成更加完善与深刻的结论。然而，现实的教育却偏偏囿于只从观察者的角度去学习和理解，变得功利且只注重 “提分效率”，拘泥于“遇到题目便应条件反射式地想到”，那些死板的公式和套路，那些冗杂的大量的运算和套路练习。然而没有真正的直觉上、思维上的训练和经过反复优化的个人思考习惯，这些工作只是看上帮助学生进行了知识获取和训练，但实际上却造成了思维上的层层负担、思维塑造和思维固化，让学生成为知识的载体与记忆体而非知识的开创者，逐渐消磨学生的创新力，也让知识难以跳出既有框架，难以再创新。为了打破如此铁幕和牢囚，学习者们也必须抛弃掉浮躁的唯分数论的心理，停下与周围人的攀比，真正静下来，主动对自己发问，凭借着自身的思考，对知识和问题本质进行漫长的探寻，不断地反思自我思考过程和纠正自身直觉，掌握真正的知识，培养真正的思维。这样不仅能在“考试”上轻松取得优异成绩，也能够抓住学习的本质，体会到学习的最深刻的的最纯粹的快乐——在你的不断探索之中，问题的解决逐渐露出痕迹、你的思维、直觉、对世界的认知不断地优化，你可以真正热爱上学习，愿意终身学习，成为掌握真正的知识的创造者。当下，这些真正能够展现人类精神内涵的学习方式，在这场以功利为导向的“知识“竞赛中竟然被视为“无用”的消耗。然而，我们必须反思的是，恰是这些貌似“低效”的路径，蕴含着通向智慧深渊的无限可能：它们看似冗长，却通往最具坚实性的思维地基；看似迂回，却揭示了通向真理之捷径。正如柏拉图在《理想国》中所描绘的洞穴隐喻：个体必须挣脱感官与表象的束缚，攀升至理念的彼岸。","categories":["思索"]},{"path":"/css/ai-summary.css","content":"/* AI Summary Card - Global Styles (theme-aware) */ .ai-summary-dashed-container { margin: 0.8rem auto 1.5rem auto; position: relative; border-radius: 12px; padding: 1rem; background: var(--card); border: 1px dashed var(--block-border); overflow: hidden; transition: transform 0.3s cubic-bezier(0.25, 0.8, 0.25, 1), box-shadow 0.3s ease; cursor: default; } .ai-summary-dashed-container:hover { transform: translateY(-4px); box-shadow: 0 6px 18px var(--theme-link-opa); } .ai-summary-dashed-container::after { content: ''; position: absolute; top: 0; left: -100%; width: 50%; height: 100%; background: linear-gradient( to right, rgba(255, 255, 255, 0) 0%, rgba(255, 255, 255, 0.18) 50%, rgba(255, 255, 255, 0) 100% ); transform: skewX(-20deg); pointer-events: none; animation: ai-sweepLight 3s linear infinite; } .ai-summary-content { display: flex; flex-direction: column; gap: 0.5rem; } .ai-summary-header { display: flex; align-items: center; } .ai-summary-tag { background: var(--theme-link); padding: 0.3rem 0.8rem; border-radius: 16px; font-weight: 600; color: #fff; font-size: 0.85rem; white-space: nowrap; } .ai-summary-slogan { margin-left: 0.6rem; color: var(--text-p2); font-size: 0.9rem; white-space: nowrap; } .ai-summary-slogan::after { margin-left: 3px; font-weight: 700; color: var(--theme-link); content: '|'; animation: ai-blink-caret 0.75s step-end infinite; } .ai-summary-body { line-height: 2; color: var(--text); font-size: 0.95rem; margin-bottom: 0.5rem; opacity: 0; animation: ai-fadeIn 0.8s forwards 0.2s; } .ai-summary-text { margin: 0; } @keyframes ai-blink-caret { from, to { opacity: 0; } 50% { opacity: 1; } } @keyframes ai-fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } } @keyframes ai-sweepLight { 0% { left: -100%; } 100% { left: 150%; } }"},{"path":"/assets/friends.json","content":"{\"friends\":[{\"name\":\"Stellar Theme\",\"url\":\"https://xaoxuu.com\",\"avatar\":\"/icon/书.svg\",\"desc\":\"示例友链：优雅的 Hexo 主题。\"},{\"name\":\"你的博客\",\"url\":\"/\",\"avatar\":\"/img/slience.jpg\",\"desc\":\"将这里替换为你的友链信息。\"}]}"},{"path":"/friends/index.html","content":"友链 - Friends 友链申请说明 欢迎交换友链，请在申请前先添加本站友链并确保站点稳定运行。 站点需拥有独立域名，非低质或违规内容。 持续更新，非长期无法访问。 请提供：站点名称、简介、头像URL、站点URL。 朋友们 最新评论"},{"path":"/js/ai-summary.js","content":"// AI Summary Card - Global Interactions (function(){ try { // slogan randomizer var header = document.querySelector('.ai-summary-dashed-container .ai-summary-slogan'); if (header) { var slogans = [ 'AI已为您提炼精华', '智能摘要，一览无余', 'AI为您总结，快速浏览', '高效阅读，从此开始', '本文核心，尽在掌握', 'AI解读，省时省力', '精彩内容，快速预览' ]; header.textContent = slogans[Math.floor(Math.random() * slogans.length)]; } // typing effect var textSpan = document.querySelector('.ai-summary-dashed-container .ai-summary-text span'); if (!textSpan) return; var fullText = textSpan.textContent || ''; textSpan.textContent = ''; textSpan.style.display = 'inline-block'; var thinkingIndex = 0; var thinkingInterval = setInterval(function() { thinkingIndex = (thinkingIndex + 1) % 4; textSpan.textContent = '思考中' + '.'.repeat(thinkingIndex); }, 500); setTimeout(function() { clearInterval(thinkingInterval); textSpan.textContent = ''; var i = 0; (function typer(){ if (i < fullText.length) { textSpan.textContent += fullText.charAt(i++); setTimeout(typer, Math.random() * 50 + 20); } })(); }, 800); } catch (e) { /* swallow */ } })();"},{"path":"/js/custom-aside.js","content":"(function(){ // 运行时间显示 try { const start = new Date('2024-07-21T04:20:27Z'); function pad(n){return n.toString().padStart(2,'0');} function update() { const now = new Date(); let diff = now - start; if (diff < 0) diff = 0; const sec = Math.floor(diff / 1000); const days = Math.floor(sec / 86400); const hours = Math.floor((sec % 86400) / 3600); const minutes = Math.floor((sec % 3600) / 60); const seconds = sec % 60; const el = document.getElementById('runtime_span'); if (el) el.textContent = `⭐ 已营业：${days} 天 ${pad(hours)} 时 ${pad(minutes)} 分 ${pad(seconds)} 秒 ⭐`; } update(); setInterval(update, 1000); } catch(e) {} // 工具函数 function ready(fn){ if(document.readyState !== 'loading') fn(); else document.addEventListener('DOMContentLoaded', fn); } function loadCSSOnce(href, id){ if(document.getElementById(id)) return; var l=document.createElement('link'); l.rel='stylesheet'; l.href=href; l.id=id; (document.head||document.body).appendChild(l); } function loadScriptFromList(list, id, cb){ var i = 0; function tryNext(){ if (i >= list.length) { cb && cb(false); return; } var existing = document.getElementById(id); if (existing) { cb && cb(true); return; } var s = document.createElement('script'); s.id = id; s.src = list[i]; s.async = true; s.onload = function(){ cb && cb(true); }; s.onerror = function(){ try { s.remove(); } catch(e){} i++; tryNext(); }; document.body.appendChild(s); } tryNext(); } // 仅注入一次样式 function addStyleOnce(id, css){ if (document.getElementById(id)) return; var style = document.createElement('style'); style.id = id; style.textContent = css; (document.head || document.body).appendChild(style); } // 右侧栏夜间模式适配 addStyleOnce('right-dark-fix', ` html.dark aside.l_right, [data-theme='dark'] aside.l_right, body.dark aside.l_right { color: var(--stel-fg, #e6e6e6); background: var(--stel-bg, rgba(34,34,34,.88)); } html.dark aside.l_right a, [data-theme='dark'] aside.l_right a, body.dark aside.l_right a { color: var(--stel-link, #dcdcdc); } html.dark aside.l_right .tag, [data-theme='dark'] aside.l_right .tag, body.dark aside.l_right .tag { background: rgba(255,255,255,.06); border-color: rgba(255,255,255,.12); } /* 覆盖右侧自定义卡片在暗色下的样式（优先级更高，并使用重要标记覆盖浅色背景） */ html.dark aside.l_right .custom-aside .card, [data-theme='dark'] aside.l_right .custom-aside .card, body.dark aside.l_right .custom-aside .card { background: rgba(34,34,34,.88) !important; color: #e6e6e6; } html.dark aside.l_right .custom-aside .notice .title, [data-theme='dark'] aside.l_right .custom-aside .notice .title, body.dark aside.l_right .custom-aside .notice .title { color: #e5e7eb; } html.dark aside.l_right .custom-aside .notice .desc, [data-theme='dark'] aside.l_right .custom-aside .notice .desc, body.dark aside.l_right .custom-aside .notice .desc, html.dark aside.l_right .custom-aside .notice li, [data-theme='dark'] aside.l_right .custom-aside .notice li, body.dark aside.l_right .custom-aside .notice li { color: #d1d5db; } html.dark aside.l_right .custom-aside .notice hr, [data-theme='dark'] aside.l_right .custom-aside .notice hr, body.dark aside.l_right .custom-aside .notice hr { border-top-color: rgba(255,255,255,.12); } html.dark aside.l_right .custom-aside .random-link, [data-theme='dark'] aside.l_right .custom-aside .random-link, body.dark aside.l_right .custom-aside .random-link { color: #d1d5db; } html.dark aside.l_right .custom-aside .random-link:hover, [data-theme='dark'] aside.l_right .custom-aside .random-link:hover, body.dark aside.l_right .custom-aside .random-link:hover { color: #f3f4f6; } `); function ensureAside(cb){ var sel = 'aside.l_right,ASIDE.l_right,.l_right'; var a = document.querySelector(sel); if (a) return cb(a); var t0 = Date.now(); var max = 8000; var timer = setInterval(function(){ var el = document.querySelector(sel); if (el){ clearInterval(timer); try{ mo && mo.disconnect(); }catch(e){} cb(el); } else if (Date.now() - t0 > max){ clearInterval(timer); try{ mo && mo.disconnect(); }catch(e){} } }, 120); var mo; try { mo = new MutationObserver(function(){ var el = document.querySelector(sel); if (el){ try{ mo.disconnect(); }catch(e){} clearInterval(timer); cb(el); } }); mo.observe(document.documentElement || document.body, {childList:true, subtree:true}); } catch(e) {} } // 已删除失败的左侧自定义模块：ensureLeft（等待左栏） ready(function(){ var isHome = location && (location.pathname === '/' || /^\\/page\\/\\d+\\/?$/.test(location.pathname)); if (!isHome) return; // 已移除失败的左侧自定义模块（custom-left） — 恢复 Stellar 默认左栏 // 样式与脚本：多CDN回退 loadCSSOnce('https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css','aplayer-css'); loadCSSOnce('https://unpkg.com/aplayer/dist/APlayer.min.css','aplayer-css-bk'); loadScriptFromList([ 'https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js', 'https://unpkg.com/aplayer/dist/APlayer.min.js', 'https://fastly.jsdelivr.net/npm/aplayer/dist/APlayer.min.js' ], 'aplayer-js', function(){ loadScriptFromList([ 'https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js', 'https://unpkg.com/meting@2/dist/Meting.min.js', 'https://fastly.jsdelivr.net/npm/meting@2/dist/Meting.min.js' ], 'meting-js', function(){ ensureAside(function(aside){ var wrap = document.createElement('div'); wrap.className = 'custom-aside'; // 样式注入：小喇叭、段落间距、链接下半涂抹、随机阅读按钮（书1/书2 切换、居中） addStyleOnce('custom-aside-notice-style', ` .custom-aside .card.notice{background:#fff;border-radius:14px;box-shadow:0 8px 24px rgba(149,157,165,.2);padding:14px} .custom-aside .notice .title{display:flex;align-items:center;justify-content:center;gap:8px;color:#374151;font-weight:700;font-size:16px;margin:2px 0 12px;text-align:center} /* CSS 小喇叭（紫底+白色，带声波动画） */ .custom-aside .notice .title .icon.horn{position:relative;display:inline-flex;width:24px;height:24px;align-items:center;justify-content:center;border-radius:50%;background:#c4b5fd} .custom-aside .notice .title .icon.horn i{position:absolute;display:block} .custom-aside .notice .title .icon.horn i.body{left:6px;width:4px;height:10px;background:#fff;border-radius:1px} .custom-aside .notice .title .icon.horn i.cone{left:10px;width:0;height:0;border-top:6px solid transparent;border-bottom:6px solid transparent;border-left:8px solid #fff} .custom-aside .notice .title .icon.horn:before,.custom-aside .notice .title .icon.horn:after{content:\"\";position:absolute;right:3px;border:2px solid #fff;border-left-color:transparent;border-bottom-color:transparent;border-radius:50%;transform:rotate(45deg) scale(.7);opacity:.25} .custom-aside .notice .title .icon.horn:before{width:10px;height:10px;animation:hornWave 1.6s ease-in-out infinite} .custom-aside .notice .title .icon.horn:after{width:14px;height:14px;animation:hornWave 1.6s ease-in-out infinite .8s} @keyframes hornWave{0%{transform:rotate(45deg) scale(.6);opacity:.2}50%{opacity:.85}100%{transform:rotate(45deg) scale(1.06);opacity:.08}} .custom-aside .notice .desc{color:#4b5563;line-height:1.8;margin:12px 0 14px} .custom-aside .notice .section-title{color:#6b7280;font-weight:700;margin:10px 0 8px} .custom-aside .notice hr{border:none;border-top:1px solid #e5e7eb;margin:14px 0} .custom-aside .notice ul{list-style:none;padding:0;margin:0} .custom-aside .notice li{display:flex;align-items:center;gap:8px;margin:6px 0;color:#4b5563} .custom-aside .notice li .dot{width:6px;height:6px;background:#60a5fa;border-radius:50%;display:inline-block} .custom-aside .notice li .label{color:#6b7280;flex:0 0 auto} /* 链接“下半部分涂抹浅紫”，hover 整块铺满 */ .custom-aside .notice .link{position:relative;color:#111827;text-decoration:none} /* 默认：底层是“随 hover 填充”的整块色（初始不可见，size 为 0）；顶层是固定的下半涂抹渐变 */ .custom-aside .notice .link.link-fill{display:inline-block;padding:0 2px;border-radius:3px;background-image:linear-gradient(rgba(196,181,253,.45), rgba(196,181,253,.45)), linear-gradient(to top, rgba(196,181,253,.45) 0 50%, rgba(196,181,253,0) 50% 100%);background-size:0% 100%, 100% 100%;background-position:0 0, 0 0;background-repeat:no-repeat;transition:background-size .25s ease,color .25s ease} /* 悬停：将整块色层铺满，覆盖下层，形成“整块填充”效果 */ .custom-aside .notice .link.link-fill:hover{background-size:100% 100%, 100% 100%} .custom-aside .notice .havefun{color:#6d28d9;font-weight:700;text-align:center;margin:12px 0 8px} .custom-aside .notice .random-row{display:flex;align-items:center;justify-content:center;margin-top:10px} .custom-aside .notice .random-link{display:inline-flex;align-items:center;gap:8px;color:#6b7280;text-decoration:none;outline:none;background:transparent;border:none;padding:4px 6px;border-radius:8px;cursor:pointer} .custom-aside .notice .random-link:hover{color:#374151;text-decoration:underline} .custom-aside .notice .book-icon{width:18px;height:18px;display:inline-block;background:url(\"/icon/书.svg\") center/contain no-repeat} .custom-aside .notice .random-link:hover .book-icon{background-image:url(\"/icon/书 (1).svg\")} /* 打字机光标样式 */ .custom-aside .typewriter{position:relative} .custom-aside .typewriter::after{content:\"▍\";display:inline-block;margin-left:2px;color:#6b7280;animation:caret-blink 1s steps(1,end) infinite} @keyframes caret-blink{0%,49%{opacity:1}50%,100%{opacity:0}} `); // 侧边栏卡片 wrap.innerHTML = ` Welcome to my blog! 一言 加载中… 音乐播放器 公告 本站依赖 GitHub + CF，如无法访问或图片加载慢，请尝试代理。 其他疑问电邮：@ 发邮件 快捷跳转地址： 域名1：slienceisabelle.com 域名2：fisory.github.io Have Fun :) ~ 随机阅读 `; aside.appendChild(wrap); // 座右铭打字机 + 通用打字机函数 function typeWriter(el, text, opts){ opts = opts || {}; var base = Number(opts.speedBase || 160); var puncPause = Number(opts.punctuationPause || 360); try { if (el.__twTimer) clearTimeout(el.__twTimer); } catch(err) {} el.textContent = ''; var i = 0; function step(){ el.textContent = text.slice(0, i++); if (i r.json()).then(function(d){ Object.keys(localStorage).forEach(function(k){ if(k.startsWith('hitokoto_')) localStorage.removeItem(k); }); localStorage.setItem(key, JSON.stringify(d)); writeText((d.hitokoto || '') + (d.from ? ' — ' + d.from : '')); }).catch(function(){ hitokotoEl.textContent = '获取失败，请稍后重试'; }); } } catch(e) { if(hitokotoEl) hitokotoEl.textContent = '获取失败'; } })(); // 随机阅读 var btn = document.getElementById('random-read-link'); btn && btn.addEventListener('click', function(e){ e.preventDefault(); var anchors = Array.from(document.querySelectorAll('a[href]')); var candidates = anchors.map(function(a){ return a.getAttribute('href'); }) .filter(function(h){ return h && h.startsWith('/') && !h.includes('#') && !/\\.(jpg|jpeg|png|gif|svg|pdf)$/i.test(h) && !h.includes('categories') && !h.includes('tags') && !h.includes('page/'); }) .filter(function(h, idx, arr){ return arr.indexOf(h) === idx; }); if (candidates.length) { var target = candidates[Math.floor(Math.random() * candidates.length)]; location.href = target; } else { alert('未找到可跳转的文章链接'); } }); }); }); }); }); })();"},{"path":"/js/stellar-left-custom.js","content":"(function(){ function ready(fn){ if(document.readyState !== 'loading') fn(); else document.addEventListener('DOMContentLoaded', fn); } function addStyleOnce(id, css){ if (document.getElementById(id)) return; var s=document.createElement('style'); s.id=id; s.textContent=css; (document.head||document.body).appendChild(s); } function ensureLeft(cb){ var sel='aside.l_left,ASIDE.l_left,.l_left'; var el=document.querySelector(sel); if (el) return cb(el); var t0=Date.now(), max=8000; var timer=setInterval(function(){ var e=document.querySelector(sel); if(e){clearInterval(timer); try{mo&&mo.disconnect();}catch(_e){} cb(e);} else if(Date.now()-t0>max){clearInterval(timer); try{mo&&mo.disconnect();}catch(_e){}} }, 120); var mo; try{ mo=new MutationObserver(function(){ var e=document.querySelector(sel); if(e){ try{mo.disconnect();}catch(_e){} clearInterval(timer); cb(e);} }); mo.observe(document.documentElement||document.body,{childList:true,subtree:true}); }catch(_e){} } addStyleOnce('stellar-left-custom-style', ` aside.l_left .stellar-signature{font-size:.72em;line-height:1.4;color:#6b7280;margin:2px 0 4px 0;display:block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;max-width:100%;font-weight:normal} /* 覆盖移动端字号，防止其他脚本将其放大 */ @media (max-width: 600px){ aside.l_left .logo-wrap .title .stellar-signature{font-size:.70em} } aside.l_left .stellar-left-bottombar{display:flex;gap:12px;align-items:center;justify-content:center;padding:8px 6px;margin-top:14px;border-top:1px dashed rgba(0,0,0,.06);position:sticky;bottom:8px;background:transparent;backdrop-filter:none} aside.l_left .stellar-left-bottombar a{width:28px;height:28px;display:inline-flex;align-items:center;justify-content:center;border-radius:8px;color:#111;text-decoration:none;user-select:none;transition:transform .2s ease, background-color .2s ease} aside.l_left .stellar-left-bottombar a:hover{background:rgba(0,0,0,.06)} aside.l_left .stellar-left-bottombar a svg{width:20px;height:20px;display:block} html.dark aside.l_left .stellar-left-bottombar a, [data-theme='dark'] aside.l_left .stellar-left-bottombar a{color:#eee} html.dark aside.l_left .stellar-left-bottombar a:hover, [data-theme='dark'] aside.l_left .stellar-left-bottombar a:hover{background:rgba(255,255,255,.12)} @media (max-width: 960px){ aside.l_left .stellar-left-bottombar{flex-wrap:wrap;gap:10px} } /* 动画 */ aside.l_left .stellar-left-bottombar .jump{animation:jump 1.4s ease-in-out infinite} @keyframes jump{0%,100%{transform:translateY(0)}50%{transform:translateY(-3px)}} aside.l_left .stellar-left-bottombar .flip{animation:flip 1.6s ease-in-out infinite} @keyframes flip{0%,100%{transform:scaleX(1)}50%{transform:scaleX(-1)}} aside.l_left .stellar-left-bottombar .shake{animation:shake 1.2s ease-in-out infinite} @keyframes shake{0%,100%{transform:translateX(0)}25%{transform:translateX(-1px)}75%{transform:translateX(1px)}} aside.l_left .stellar-left-bottombar .spin{animation:spin 2.2s linear infinite} @keyframes spin{to{transform:rotate(360deg)}} /* 提示 */ .stellar-toast{position:fixed;right:16px;bottom:16px;background:rgba(17,24,39,.92);color:#fff;padding:8px 12px;border-radius:10px;font-size:13px;box-shadow:0 8px 24px rgba(0,0,0,.2);opacity:0;transform:translateY(8px);transition:opacity .2s,transform .2s;z-index:9999} .stellar-toast.show{opacity:1;transform:translateY(0)} /* 飘落效果 */ .stellar-snow-flake{position:fixed;top:-24px;left:0;will-change:transform;pointer-events:none;user-select:none} @keyframes fall{to{transform:translate3d(var(--dx,0px),110vh,0) rotate(var(--rot,360deg));opacity:.9}} `); function showToast(msg){ try { var el=document.getElementById('stellar-toast'); if(!el){ el=document.createElement('div'); el.id='stellar-toast'; el.className='stellar-toast'; document.body.appendChild(el); } el.textContent=msg; el.classList.add('show'); clearTimeout(el.__t); el.__t=setTimeout(function(){ el.classList.remove('show'); }, 1600); } catch(e){} } // 飘落效果 var snowOn=false, snowTimer=null; var snowChars=['❄','⭐','⛄']; function spawnFlake(){ var flake=document.createElement('span'); flake.className='stellar-snow-flake'; flake.textContent=snowChars[Math.floor(Math.random()*snowChars.length)]; var size=12+Math.random()*14; var left=Math.random()*100; var drift=(Math.random()*2-1)*80; var dur=6+Math.random()*6; var rot=(Math.random()>0.5?360:-360)+'deg'; flake.style.fontSize=size+'px'; flake.style.left=left+'vw'; flake.style.setProperty('--dx', drift+'px'); flake.style.setProperty('--rot', rot); flake.style.animation='fall '+dur+'s linear forwards'; document.body.appendChild(flake); setTimeout(function(){ try{flake.remove();}catch(e){} }, (dur*1000)+200); } function startSnow(){ if(snowOn) return; snowOn=true; snowTimer=setInterval(spawnFlake, 420); document.body.setAttribute('data-snow','on'); } function stopSnow(){ snowOn=false; if(snowTimer) clearInterval(snowTimer); snowTimer=null; document.body.removeAttribute('data-snow'); Array.from(document.querySelectorAll('.stellar-snow-flake')).forEach(function(n){ try{n.remove();}catch(e){} }); } function toggleSnow(){ if(snowOn){ stopSnow(); showToast('飘落已关闭'); } else { startSnow(); showToast('飘落已开启'); } } // 夜间/黑暗模式 var darkOn = (localStorage.getItem('stellar_dark') === '1') || document.documentElement.classList.contains('dark') || (document.documentElement.dataset.theme === 'dark') || (document.body && (document.body.classList.contains('dark') || document.body.dataset.theme === 'dark')); function applyDark(on){ try { var root = document.documentElement; var body = document.body; if(on){ root.classList.add('dark'); root.dataset.theme = 'dark'; if (body) { body.classList.add('dark'); body.dataset.theme = 'dark'; } localStorage.setItem('stellar_dark','1'); } else { root.classList.remove('dark'); root.dataset.theme = 'light'; if (body) { body.classList.remove('dark'); body.dataset.theme = 'light'; } localStorage.setItem('stellar_dark','0'); } } catch(e) {} } function toggleDark(){ darkOn=!darkOn; applyDark(darkOn); showToast(darkOn?'夜间模式已开启':'夜间模式已关闭'); } ready(function(){ ensureLeft(function(left){ function mountLeft() { try { // 1) 签名：遵循左栏 header.logo-wrap > a.title 结构，在 .sub 之后插入一行，继承 .sub 样式 var titleEl = left.querySelector('.logo-wrap .title, a.title'); // 将左栏昵称改为 Slience（尽量只替换可见文本，不破坏 .sub 等结构） if (titleEl) { (function(){ var nameEl = titleEl.querySelector('.name,.main,.nickname,.title-text'); if (nameEl) { nameEl.textContent = 'Slience'; } else { var replaced = false; for (var i=0;i"},{"path":"/assets/css/main.css","content":"/* Friends Page - Main Styles (scoped by variables to match Stellar theme) */ :root { /* Map to theme variables for full consistency */ --friends-card-bg: var(--card); --friends-card-border: var(--block-border); --friends-card-hover: var(--block-hover, rgba(0,0,0,0.03)); --friends-text: var(--text); --friends-text-secondary: var(--text-p2); --friends-accent: var(--theme-link); --friends-shadow: var(--theme-link-opa); } /* Layout - Grid System */ .grid-box { display: grid; grid-template-columns: repeat(auto-fill, minmax(180px, 1fr)); gap: 12px; } .grid-cell { list-style: none; } /* Friends Page Wrapper */ .friends-page { margin: 1rem 0 2rem; } .friends-page h2 { font-size: 1.25rem; margin: 1rem 0 0.75rem; color: var(--friends-text); } .friends-page p, .friends-page li { color: var(--friends-text-secondary); } .friends-apply { background: var(--friends-card-bg); border: 1px solid var(--friends-card-border); border-radius: 14px; padding: 16px; margin-bottom: 16px; } .friends-apply .rules { padding-left: 1.25rem; } /* Friend Card */ .friend-card { display: flex; align-items: center; gap: 12px; background: var(--friends-card-bg); border: 1px solid var(--friends-card-border); border-radius: 14px; padding: 12px; text-decoration: none; color: var(--friends-text); box-shadow: 0 2px 10px -6px rgba(0, 0, 0, 0.08); transition: all 0.2s ease; } .friend-card:hover { transform: translateY(-1px); border-color: var(--friends-accent); box-shadow: 0 8px 24px -10px var(--friends-shadow); } .friend-card .avatar { width: 44px; height: 44px; border-radius: 50%; object-fit: cover; background: var(--site-bg); flex: 0 0 44px; } .friend-card .meta { overflow: hidden; } .friend-card .friend-name { font-weight: 600; color: var(--friends-text); line-height: 1.2; } .friend-card .friend-desc { font-size: 0.875rem; line-height: 1.4; color: var(--friends-text-secondary); display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden; } /* Recent Comments */ .rc-list { list-style: none; margin: 0; padding: 0; } .rc-item { display: flex; align-items: center; gap: 8px; padding: 8px 0; border-bottom: 1px dashed var(--friends-card-border); } .rc-item a { color: var(--friends-text); text-decoration: none; } .rc-item a:hover { color: var(--friends-accent); text-decoration: underline; } .rc-time { margin-left: auto; color: var(--friends-text-secondary); font-size: 12px; white-space: nowrap; } .rc-empty { color: var(--friends-text-secondary); font-style: italic; } /* Lazy Image */ img.lazy { filter: blur(6px); transition: filter 0.25s ease; } img.lazy.loaded { filter: blur(0); } /* Responsive Tweaks */ @media (max-width: 480px) { .grid-box { grid-template-columns: repeat(auto-fill, minmax(150px, 1fr)); gap: 10px; } .friend-card { padding: 10px; } .friend-card .avatar { width: 40px; height: 40px; } }"},{"path":"/assets/js/custom.js","content":"/* Custom scripts placeholder for future extensions */ (function(){ /* add your enhancements here */ })();"},{"path":"/assets/js/friends.js","content":"/* Friends module: data load + render into .ds-friends */ (function () { var $ = window.jQuery || window.$; var utils = window.utils || {}; function renderFriend(item) { // item: { name, url, avatar, desc } var a = document.createElement('a'); a.href = item.url; a.target = '_blank'; a.rel = 'noopener noreferrer'; a.className = 'friend-card'; // avatar var img = document.createElement('img'); img.className = 'avatar'; img.alt = item.name || ''; if (item.avatar) img.setAttribute('data-src', item.avatar); // lazy a.appendChild(img); // meta var meta = document.createElement('div'); meta.className = 'meta'; var name = document.createElement('div'); name.className = 'friend-name'; name.textContent = item.name || ''; var desc = document.createElement('div'); desc.className = 'friend-desc'; desc.textContent = item.desc || ''; meta.appendChild(name); meta.appendChild(desc); a.appendChild(meta); return a; } function mountFriends(list) { var box = document.querySelector('.ds-friends .grid-box'); if (!box) return; box.innerHTML = ''; (list || []).forEach(function (item) { var li = document.createElement('li'); li.className = 'grid-cell'; li.appendChild(renderFriend(item)); box.appendChild(li); }); // trigger lazyload init if main.js already ran if (typeof window.dispatchEvent === 'function') { window.dispatchEvent(new Event('friends:mounted')); } } function requestFriends() { // Prefer utils.request if available var fetcher = (utils && utils.request) ? utils.request : function (url) { return fetch(url).then(function (r) { return r.json(); }); }; // Data source: /assets/friends.json (you can populate via Hexo data files or manual) var url = '/assets/friends.json'; return fetcher(url).then(function (data) { if (data && data.friends) return data.friends; return data; }); } function init() { var el = document.querySelector('.ds-friends'); if (!el) return; requestFriends().then(mountFriends).catch(function (e) { console.warn('Friends load failed', e); }); } // Hook DOM ready (prefer utils.jq) if (utils && typeof utils.jq === 'function') { utils.jq(init); } else if ($) { $(init); } else { if (document.readyState !== 'loading') init(); else document.addEventListener('DOMContentLoaded', init); } })();"},{"path":"/assets/js/main.js","content":"/* Main JS: theme bridge, fancybox init, lazyload, helpers */ (function () { // jQuery bridge: ensure compatibility if $ not present var $ = window.jQuery || window.$; // Theme toggle integration function applyTheme(theme) { if (!theme) return; document.documentElement.setAttribute('data-theme', theme); } function initThemeToggle() { try { var KEY = 'theme'; var saved = localStorage.getItem(KEY); if (saved) applyTheme(saved); // Observe existing theme switcher if exists var switchers = document.querySelectorAll('[data-theme-toggle], .theme-toggle, #theme-toggle'); switchers.forEach(function (el) { el.addEventListener('click', function () { var current = document.documentElement.getAttribute('data-theme') || 'light'; var next = current === 'dark' ? 'light' : 'dark'; applyTheme(next); localStorage.setItem(KEY, next); }); }); } catch (e) { console.warn('Theme toggle init failed', e); } } // Fancybox init (if available) function initFancybox() { if (window.Fancybox) { try { Fancybox.bind('[data-fancybox]', { Thumbs: false, Toolbar: { display: ['zoom', 'close'] } }); } catch (e) { console.warn('Fancybox init error', e); } } } // Simple lazyload for images with data-src function initLazyImages() { var imgs = [].slice.call(document.querySelectorAll('img[data-src]:not(.lazy)')); if (!('IntersectionObserver' in window)) { imgs.forEach(function (img) { img.src = img.getAttribute('data-src'); }); return; } var io = new IntersectionObserver(function (entries) { entries.forEach(function (entry) { if (entry.isIntersecting) { var img = entry.target; img.src = img.getAttribute('data-src'); img.addEventListener('load', function () { img.classList.add('loaded'); }); io.unobserve(img); } }); }, { rootMargin: '100px' }); imgs.forEach(function (img) { img.classList.add('lazy'); io.observe(img); }); } function onReady(fn) { if (document.readyState !== 'loading') fn(); else document.addEventListener('DOMContentLoaded', fn); } onReady(function () { initThemeToggle(); initFancybox(); initLazyImages(); // Re-scan lazy images after friends list is mounted window.addEventListener('friends:mounted', initLazyImages, { once: false }); }); })();"},{"path":"/assets/js/twikoo_new.js","content":"/* Twikoo recent comments: fetch and render into .ds-recent-comments */ (function () { var $ = window.jQuery || window.$; var utils = window.utils || {}; var CONTAINER_SELECTOR = '.ds-recent-comments'; var LIST_SELECTOR = '.rc-list'; function renderItem(item) { var li = document.createElement('li'); li.className = 'rc-item'; var a = document.createElement('a'); a.href = item.url; a.textContent = item.nick + '：' + (item.comment || '').replace(/]+>/g, '').slice(0, 60); a.setAttribute('data-fancybox', ''); var time = document.createElement('span'); time.className = 'rc-time'; time.textContent = item.time || ''; li.appendChild(a); li.appendChild(time); return li; } function mount(list) { var wrap = document.querySelector(CONTAINER_SELECTOR); if (!wrap) return; var ul = wrap.querySelector(LIST_SELECTOR); if (!ul) { ul = document.createElement('ul'); ul.className = 'rc-list'; wrap.appendChild(ul); } ul.innerHTML = ''; if (!list || !list.length) { var empty = document.createElement('div'); empty.className = 'rc-empty'; empty.textContent = '暂无最新评论'; wrap.appendChild(empty); return; } list.forEach(function (item) { ul.appendChild(renderItem(item)); }); } function requestRecentComments() { // Use utils.request if provided. You may relay to your Twikoo endpoint or cache API. var fetcher = (utils && utils.request) ? utils.request : function (url) { return fetch(url).then(function (r) { return r.json(); }); }; // Expect a JSON: { list: [ { url, nick, comment, time }, ... ] } var url = '/assets/recent-comments.json'; return fetcher(url).then(function (data) { return data && (data.list || data.comments || data) || []; }); } function init() { requestRecentComments().then(mount).catch(function (e) { console.warn('twikoo recent comments failed', e); }); } if (utils && typeof utils.jq === 'function') utils.jq(init); else if ($) $(init); else if (document.readyState !== 'loading') init(); else document.addEventListener('DOMContentLoaded', init); })();"},{"path":"/大二上/数电/笔记/数电基础.html","content":"信号类型 数字信号：离散的、量化的信号 模拟信号：连续的、无限精度的信号 二进制数制基本概念 诞生原因：$0$ 和 $1$ 在计算机内部易于处理 表示方法：符号位 + 数值位 数制转换权重展开法方法主要基于理解：任意进制数都可以用权重展开的形式表示： $$N &#x3D; \\sum_{i&#x3D;-m}^{n-1} a_i \\times r^i$$ 其中： $a_i$ 为第 $i$ 位的数字 $r$ 为进制基数 $n$ 为整数位数 $m$ 为小数位数 常见进制转换 二进制 $(2)$ ↔ 八进制 $(8)$ ↔ 十六进制 $(16)$ ↔ 十进制 $(10)$小数乘、整数除 二进制运算基本运算 加法、减法、乘法、除法 负数表示 - 补码由于计算机内部构建的简化需求，所有运算都使用加法实现。 补码数值上：符号位不变，其他位取反加一 补码理解： 类比时钟：从 $10$ 点到 $5$ 点 正向：$+7$ 小时 反向：$-5$ 小时 因此 $+7$ 和 $-5$ 互为补码 补码性质：$$5 + 7 &#x3D; 12 &#x3D; 2^n \\text{（码制可表示的最大值）}$$ 补码运算示例（以5位二进制为例）： $(-1) + 7$：通过忽略进位，符号位变为 $0$ $(-12) + 5$：正常运算 二进制编码十进制 (BCD) 各种编码方式 格雷码：减少过渡噪声，相邻码字只有一位不同 逻辑运算基本运算符逻辑变量和逻辑函数逻辑运算与集合运算的对应关系： 与运算 (AND)：$A \\cdot B$ 或 $A \\land B$，对应集合的交运算 或运算 (OR)：$A + B$ 或 $A \\lor B$，对应集合的并运算 非运算 (NOT)：$\\overline{A}$ 或 $ eg A$，对应集合的补运算 电路符号表示 与门：$&amp;$ 符号 或门：$\\geq 1$ 符号 非门：输出端加 $\\circ$ 符号另一种符号表示：与或非越来越尖 其他逻辑运算 异或 (XOR)：$A \\oplus B$，当且仅当 $A eq B$ 时为真 同或 (XNOR)：$A \\odot B$，当且仅当 $A &#x3D; B$ 时为真 异或与同或的关系：$$A \\odot B &#x3D; \\overline{A \\oplus B}$$ 运算公式基本定律 交换律：$A + B &#x3D; B + A$，$A \\cdot B &#x3D; B \\cdot A$ 结合律：$(A + B) + C &#x3D; A + (B + C)$，$(A \\cdot B) \\cdot C &#x3D; A \\cdot (B \\cdot C)$ 分配律：$A \\cdot (B + C) &#x3D; A \\cdot B + A \\cdot C$，$A + (B \\cdot C) &#x3D; (A + B) \\cdot (A + C)$ 德摩根定理$$\\overline{A + B} &#x3D; \\overline{A} \\cdot \\overline{B}$$$$\\overline{A \\cdot B} &#x3D; \\overline{A} + \\overline{B}$$ 异或和同或公式 $A \\oplus B &#x3D; A\\overline{B} + \\overline{A}B$ $A \\odot B &#x3D; A B + \\overline{A},\\overline{B}$ 逻辑函数与最小项最小项定义最小项 (Minterm)：由 $n$ 个逻辑变量构成的与项，每个变量都出现且只出现一次（原变量或反变量形式）。 最小项性质 数量：$n$ 个变量有 $2^n$ 个最小项 唯一性：对于逻辑变量的一组固定输入，只有一个最小项为1 编码：可以对最小项进行二进制编码，对应十进制数 正交性：任意两个不同最小项的乘积为 $0$ 逻辑函数的标准形式由于最小项的正交性，最小项可以作为逻辑函数的基： $$f(A,B,C,\\ldots) &#x3D; \\sum m_i$$ 其中 $m_i$ 表示使函数值为 $1$ 的最小项。 标准型推导：利用 $A + \\overline{A} &#x3D; 1$ 的性质可以得到标准型。 逻辑函数化简化简目标逻辑函数的最简与或式： 乘积项数最少 每个乘积项中的变量数最少 化简方法1. 公式法利用布尔代数的基本定律和定理进行化简。 2. 卡诺图法 (Karnaugh Map)卡诺图结构 00 01 11 1000011110 格雷码排列：相邻位置只有一个变量不同 卡诺图特点： 相邻性：物理相邻的最小项只有一个变量不同，最左和最右、最上和最下也相邻 化简原理：相邻的可以合并，消去不同的变量 化简步骤： 将逻辑函数的最小项在卡诺图中标为 $1$ 找出相邻的 $1$，进行合并 四个相邻的 $1$ 可以消去两个变量 最大项最大项 (Maxterm)：由 $n$ 个逻辑变量构成的或项，每个变量都出现且只出现一次。 最大项与最小项具有对偶关系：$$M_i &#x3D; \\overline{m_i}$$"},{"path":"/大二上/概率统计/笔记/古典概型和概率空间.html","content":"试验与事件概念试验（Experiment）：按照一定的想法去做的事情称为随机试验，简称试验，这是指一个可以重复进行，且结果不确定的过程。掷一次骰子就是一个试验。掷一个硬币, 观察是否正面朝上, 样本空间（Sample Space）：这是指一个试验所有可能结果的集合。 一个标准的六面骰子，所有可能的结果是{1, 2, 3, 4, 5, 6}。 投掷一枚硬币W+表示硬币正面朝上，W-表示硬币反面朝上，试验两个可能的结果：W+ 和W- . 我们称W+和W-是样本点 事件（Event）：这是样本空间的一个子集，是试验中我们所关心的。用AB表示A∩B，当AB &#x3D; φ也用A + B表示A U B相容和对立事件。事件的运算公式就是集合的运算公式 古典概率概型用# A, # Ω分别表示事件A和样本空间Ω的样本点的个数 基本公式P(A) &#x3D; P(AB) + P(A非B)P(A) &#x3D; # A&#x2F; # ΩAm n &#x3D; n!&#x2F;(n-m)!Cm n &#x3D; n!&#x2F;(n-m)!m!将n个不同的元素分成有次序的k组，不考虑每组中元素的次序，第i(1 ≤ i ≤ n)组恰有ni个元素的不同可能数是：例题可看：（p74）"},{"path":"/大二上/离散数学/笔记/离散数学.html","content":"离散数学基础参考书目：Discrete Mathematical Structures (Sixth Edition) 集合论 (Set Theory)集合的基本概念集合的定义与性质 集合 (Set)：由确定的、互不相同的对象组成的整体 元素 (Element)：组成集合的对象 性质：确定性、互异性、无序性 集合的表示方式 列举法：$A &#x3D; {1, 2, 3, 4, 5}$ 描述法：$A &#x3D; {x | x \\text{ 满足条件 } P(x)}$ 图示法：文式图 (Venn Diagram) 特殊集合 全集 (Universal Set)：$U$ 或 $\\Omega$ 空集 (Empty Set)：$\\emptyset$ 或 ${}$ 自然数集：$\\mathbb{N} &#x3D; {0, 1, 2, 3, \\ldots}$ 整数集：$\\mathbb{Z} &#x3D; {\\ldots, -2, -1, 0, 1, 2, \\ldots}$ 有理数集：$\\mathbb{Q}$ 实数集：$\\mathbb{R}$ 集合间的关系基本关系 属于关系：$x \\in A$（$x$ 属于集合 $A$） 不属于关系：$x otin A$（$x$ 不属于集合 $A$） 子集关系：$A \\subseteq B \\Leftrightarrow \\forall x (x \\in A \\Rightarrow x \\in B)$ 真子集关系：$A \\subset B \\Leftrightarrow A \\subseteq B \\land A eq B$ 相等关系：$A &#x3D; B \\Leftrightarrow A \\subseteq B \\land B \\subseteq A$ 笛卡尔积 (Cartesian Product)设 $A$ 和 $B$ 是两个集合，则 $A$ 和 $B$ 的笛卡尔积定义为：$$A \\times B &#x3D; {(a, b) | a \\in A \\land b \\in B}$$ 性质： $|A \\times B| &#x3D; |A| \\cdot |B|$ $A \\times \\emptyset &#x3D; \\emptyset \\times A &#x3D; \\emptyset$ $(A \\cup B) \\times C &#x3D; (A \\times C) \\cup (B \\times C)$ $(A \\cap B) \\times C &#x3D; (A \\times C) \\cap (B \\times C)$ 集合的重要性质幂集 (Power Set)集合 $A$ 的幂集 $\\mathcal{P}(A)$ 是 $A$ 的所有子集组成的集合： $$\\mathcal{P}(A) &#x3D; {S | S \\subseteq A}$$ 幂集的基数：若 $|A| &#x3D; n$，则 $|\\mathcal{P}(A)| &#x3D; 2^n$（所以称幂） 示例：若 $A &#x3D; {1, 2}$，则：$$\\mathcal{P}(A) &#x3D; {\\emptyset, {1}, {2}, {1,2}}$$ 基数 (Cardinality)集合 $A$ 的基数 $|A|$ 表示集合中元素的个数。 有限集：$|A| &#x3D; n$（$n \\in \\mathbb{N}$） 容斥原理 (Inclusion-Exclusion Principle)二集合容斥原理：$$|A \\cup B| &#x3D; |A| + |B| - |A \\cap B|$$ 三集合容斥原理：$$|A \\cup B \\cup C| &#x3D; |A| + |B| + |C| - |A \\cap B| - |A \\cap C| - |B \\cap C| + |A \\cap B \\cap C|$$ 一般形式（$n$ 个集合）：$$\\left|\\bigcup_{i&#x3D;1}^{n} A_i\\right| &#x3D; \\sum_{i&#x3D;1}^{n} |A_i| - \\sum_{1 \\leq i &lt; j \\leq n} |A_i \\cap A_j| + \\sum_{1 \\leq i &lt; j &lt; k \\leq n} |A_i \\cap A_j \\cap A_k| - \\cdots + (-1)^{n+1} \\left|\\bigcap_{i&#x3D;1}^{n} A_i\\right|$$ 补集形式：$$|\\overline{A \\cup B \\cup C}| &#x3D; |\\overline{A} \\cap \\overline{B} \\cap \\overline{C}| &#x3D; |U| - |A \\cup B \\cup C|$$ 集合基数相关的证明：拆分为两个不相交的集合$$|A \\cup B| &#x3D; |A - B| + |B| &#x3D; |A| + |B - A|$$ 集合运算基本运算 并集 (Union)：$A \\cup B &#x3D; {x | x \\in A \\lor x \\in B}$ 交集 (Intersection)：$A \\cap B &#x3D; {x | x \\in A \\land x \\in B}$ 差集 (Difference)：$A - B &#x3D; {x | x \\in A \\land x otin B}$ 补集 (Complement)：$\\overline{A} &#x3D; U - A &#x3D; {x | x \\in U \\land x otin A}$ 对称差 (Symmetric Difference)：$A \\triangle B &#x3D; (A - B) \\cup (B - A)$$$A \\triangle B &#x3D; (A \\cup B) - (A \\cap B) &#x3D; (A - B) \\cup (B - A)$$笛卡尔积：划分：所有的元素唯一地分到不同的集合里面，那些集合的整体构成一个划分，其中某个集合叫原集合的分块A的划分是A的幂集的子集 集合运算的性质基本定律 交换律 (Commutative Laws)： $A \\cup B &#x3D; B \\cup A$ $A \\cap B &#x3D; B \\cap A$ 结合律 (Associative Laws)： $(A \\cup B) \\cup C &#x3D; A \\cup (B \\cup C)$ $(A \\cap B) \\cap C &#x3D; A \\cap (B \\cap C)$ 分配律 (Distributive Laws)： $A \\cup (B \\cap C) &#x3D; (A \\cup B) \\cap (A \\cup C)$ $A \\cap (B \\cup C) &#x3D; (A \\cap B) \\cup (A \\cap C)$ 德摩根定律 (De Morgan’s Laws)： $\\overline{A \\cup B} &#x3D; \\overline{A} \\cap \\overline{B}$ $\\overline{A \\cap B} &#x3D; \\overline{A} \\cup \\overline{B}$ 恒等律 (Identity Laws)： $A \\cup \\emptyset &#x3D; A$ $A \\cap U &#x3D; A$ 零律 (Null Laws)： $A \\cup U &#x3D; U$ $A \\cap \\emptyset &#x3D; \\emptyset$ 补律 (Complement Laws)： $A \\cup \\overline{A} &#x3D; U$ $A \\cap \\overline{A} &#x3D; \\emptyset$ $\\overline{\\overline{A}} &#x3D; A$ 乘积集合的运算性质： 分配律：$A \\times (B \\cup C) &#x3D; (A \\times B) \\cup (A \\times C)$ 结合律： 关系 (Relations)由笛卡尔积引出的内容 关系的定义：设 $A$ 和 $B$ 是两个集合，则称 $A \\times B$ 的任意子集 $R$ 为从 $A$ 到 $B$ 的一个关系，记作 $R \\subseteq A \\times B$。 特殊关系： 空关系：$R &#x3D; \\emptyset$（空集） 全关系：$R &#x3D; A \\times A$（全集） 关系 $R$ 是一个特殊的集合（乘积集合的子集） 关系的表示： $a$ 与 $b$ 是 $R$ 相关的：记作 $(a, b) \\in R$ 或 $aRb$ 特征函数的记法：$\\chi_R(a, b) &#x3D; \\begin{cases} 1, &amp; \\text{if } (a, b) \\in R \\ 0, &amp; \\text{if } (a, b) otin R \\end{cases}$ 关系的基本概念： 定义域 (Domain)：$\\text{dom}(R) &#x3D; {a \\in A | \\exists b \\in B, (a, b) \\in R}$ 值域 (Range)：$\\text{ran}(R) &#x3D; {b \\in B | \\exists a \\in A, (a, b) \\in R}$ 集合 $A_1$ 对于关系 $R$ 的像集：$R(A_1) &#x3D; {b \\in B | \\exists a \\in A_1, (a, b) \\in R}$ $x$ 关于 $R$ 的像集：$R({x}) &#x3D; {y | (x, y) \\in R}$ 关系矩阵 (Relation Matrix)像使用特征函数表示集合一样，我们可以使用关系矩阵来表示关系。 设 $A &#x3D; {a_1, a_2, \\ldots, a_m}$，$B &#x3D; {b_1, b_2, \\ldots, b_n}$，关系 $R \\subseteq A \\times B$，则关系矩阵 $M_R &#x3D; [m_{ij}]{m \\times n}$，其中：$$m{ij} &#x3D; \\begin{cases}1, &amp; \\text{if } (a_i, b_j) \\in R \\0, &amp; \\text{if } (a_i, b_j) otin R\\end{cases}$$ 关系的运算合成运算 “$\\circ$”：设 $R$ 是 $A$ 到 $B$ 的一个关系，$S$ 是 $B$ 到 $C$ 的一个关系，则称 $S \\circ R$ 是 $A$ 到 $C$ 的复合（合成）关系：$$S \\circ R &#x3D; {(a, c) | a \\in A, c \\in C, \\exists b \\in B, (a, b) \\in R \\land (b, c) \\in S}$$ 矩阵表示：$(S \\circ R)$ 的关系矩阵等价为矩阵的乘法：$M_{S \\circ R} &#x3D; M_R \\cdot M_S$ 恒等关系：若 $R \\circ S &#x3D; S \\circ R &#x3D; R$，则 $S$ 对应的矩阵为单位矩阵 $I$ 关系的幂运算： 定义：$R^n &#x3D; \\underbrace{R \\circ R \\circ \\cdots \\circ R}_{n \\text{ 次}}$ 公式：$R^0 &#x3D; I_A$（恒等关系），$R^{n+1} &#x3D; R^n \\circ R$ 传递闭包： $R$ 的关联关系（$R^{\\infty}$）：$R^{\\infty} &#x3D; R^1 \\cup R^2 \\cup R^3 \\cup \\cdots$ 可达关系：从 $a$ 到 $b$ 存在路径的关系 相对于看图来说，代数计算显然更方便 关系合成的性质结合律：$(R \\circ S) \\circ T &#x3D; R \\circ (S \\circ T)$分配律：$R \\circ (S \\cup T) &#x3D; (R \\circ S) \\cup (R \\circ T)$单位元：$R \\circ I_A &#x3D; I_B \\circ R &#x3D; R$（其中 $I_A$、$I_B$ 分别是 $A$、$B$ 上的恒等关系） 关系的性质设 $R$ 是集合 $A$ 上的关系（即 $R \\subseteq A \\times A$），则： 自反性 (Reflexive)：$\\forall a \\in A, (a, a) \\in R$反自反性 (Irreflexive)：$\\forall a \\in A, (a, a) otin R$对称性 (Symmetric)：$\\forall a, b \\in A, (a, b) \\in R \\Rightarrow (b, a) \\in R$反对称性 (Antisymmetric)：$\\forall a, b \\in A, (a, b) \\in R \\land (b, a) \\in R \\Rightarrow a &#x3D; b$传递性 (Transitive)：$\\forall a, b, c \\in A, (a, b) \\in R \\land (b, c) \\in R \\Rightarrow (a, c) \\in R$ 关系与有向图 (Relations and Directed Graphs)图的定义：称序对 $G &#x3D; (V, E)$ 为图。其中，$V$ 表示顶点集合，$E$ 表示边集合（顶点之间的连线，称之为边）。如果顶点之间的连线具有方向性，则称该图为有向图。 度的概念： 顶点的入度 (In-degree)：$\\text{deg}^-(v) &#x3D; |{u \\in V | (u, v) \\in E}|$（进入该顶点的边数） 顶点的出度 (Out-degree)：$\\text{deg}^+(v) &#x3D; |{u \\in V | (v, u) \\in E}|$（离开该顶点的边数） 路径 (Path)：从顶点 $v_0$ 到顶点 $v_n$ 的路径是顶点序列 $v_0, v_1, v_2, \\ldots, v_n$，其中 $(v_i, v_{i+1}) \\in E$，$i &#x3D; 0, 1, \\ldots, n-1$。 等价性：针对有限论域，关系、矩阵和图是相互等价的 关系 $R \\subseteq A \\times A$ 关系矩阵 $M_R$ 有向图 $G &#x3D; (A, R)$ 图论中的概念： 简单路径：所有顶点都不相同的路径 回路 (Cycle)：起点和终点相同的路径，即 $v_0 &#x3D; v_n$ 连通性：如果存在从顶点 $u$ 到顶点 $v$ 的路径，则称 $u$ 和 $v$ 是连通的 强连通图：对于任意两个顶点 $u, v$，都存在从 $u$ 到 $v$ 和从 $v$ 到 $u$ 的路径 矩阵运算与图的关系： $M_R^n$ 的第 $(i, j)$ 元素表示从顶点 $i$ 到顶点 $j$ 长度为 $n$ 的路径数 可达矩阵：$M_{R^*} &#x3D; M_R^0 + M_R^1 + M_R^2 + \\cdots$（布尔运算） 特征函数 (Characteristic Function)集合 $A$ 的特征函数 $\\chi_A: U \\to {0, 1}$ 定义为： $$\\chi_A(x) &#x3D; \\begin{cases}1, &amp; \\text{if } x \\in A \\0, &amp; \\text{if } x otin A\\end{cases}$$ 特征函数与集合运算的关系设 $U$ 是全集，$A, B \\subseteq U$，则： 并集：$\\chi_{A \\cup B}(x) &#x3D; \\max(\\chi_A(x), \\chi_B(x)) &#x3D; \\chi_A(x) + \\chi_B(x) - \\chi_A(x)\\chi_B(x)$ 交集：$\\chi_{A \\cap B}(x) &#x3D; \\min(\\chi_A(x), \\chi_B(x)) &#x3D; \\chi_A(x) \\cdot \\chi_B(x)$ 补集：$\\chi_{\\overline{A}}(x) &#x3D; 1 - \\chi_A(x)$ 对称差：$\\chi_{A \\triangle B}(x) &#x3D; \\chi_A(x) + \\chi_B(x) - 2\\chi_A(x)\\chi_B(x) &#x3D; |\\chi_A(x) - \\chi_B(x)|$ 差集：$\\chi_{A - B}(x) &#x3D; \\chi_A(x) \\cdot (1 - \\chi_B(x)) &#x3D; \\chi_A(x) \\cdot \\chi_{\\overline{B}}(x)$ 特征函数将集合运算与代数运算联系起来，为集合论提供了代数化的处理方法。可以使用特征函数证明集合相等 集合乘积的特征函数设 $A \\subseteq X$，$B \\subseteq Y$，则笛卡尔积 $A \\times B$ 的特征函数定义为：$$\\chi_{A \\times B}(x, y) &#x3D; \\chi_A(x) \\cdot \\chi_B(y)$$ 其中 $(x, y) \\in X \\times Y$。 性质： $\\chi_{(A_1 \\cup A_2) \\times B}(x, y) &#x3D; \\chi_{A_1 \\times B}(x, y) + \\chi_{A_2 \\times B}(x, y) - \\chi_{A_1 \\times B}(x, y) \\cdot \\chi_{A_2 \\times B}(x, y)$ $\\chi_{(A_1 \\cap A_2) \\times B}(x, y) &#x3D; \\chi_{A_1 \\times B}(x, y) \\cdot \\chi_{A_2 \\times B}(x, y)$ $\\chi_{A \\times (B_1 \\cup B_2)}(x, y) &#x3D; \\chi_{A \\times B_1}(x, y) + \\chi_{A \\times B_2}(x, y) - \\chi_{A \\times B_1}(x, y) \\cdot \\chi_{A \\times B_2}(x, y)$"}]